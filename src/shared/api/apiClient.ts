import axios, { AxiosError } from 'axios';

const apiClient = axios.create({
  baseURL: import.meta.env.VITE_API_BASE_URL,
  headers: {
    'Content-Type': 'application/json',
  },
});

// ‚úÖ Interceptor ‡∏ù‡∏±‡πà‡∏á Request: ‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°" ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
apiClient.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('authToken');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error: AxiosError) => {
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î "‡∏Å‡πà‡∏≠‡∏ô" ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Request ‡πÄ‡∏ä‡πà‡∏ô Network Error
    console.error('Request Error:', error);
    return Promise.reject(error);
  },
);

// ‚úÖ Interceptor ‡∏ù‡∏±‡πà‡∏á Response: ‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£" ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
apiClient.interceptors.response.use(
  (response) => {
    // ‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ‡∏ñ‡πâ‡∏≤ server ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢ status 2xx ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
    return response;
  },
  (error: AxiosError) => {
    // üëà 2. ‡∏¢‡πâ‡∏≤‡∏¢ Logic ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏Ç‡∏≠‡∏á Response
    if (axios.isAxiosError(error)) {
      const status = error.response?.status;
      const errorMessage = error.message || 'An error occurred';

      switch (status) {
        case 401: // Unauthorized
          // ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user/token ‡∏Å‡πà‡∏≠‡∏ô redirect
          // localStorage.removeItem('authToken');
          window.location.href = '/login';
          break;

        case 403: // Forbidden
          error.message = '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á';
          break;

        case 404: // Not Found
          error.message = '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠';
          break;

        case 500: // Internal Server Error
          error.message = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå';
          break;

        default:
          console.error(
            `API Error - Status: ${status}, Message: ${errorMessage}`,
          );
          error.message = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏';
          break;
      }
    } else {
      console.error('An unexpected error occurred:', error);
    }

    return Promise.reject(error);
  },
);

export default apiClient;
